{"version":3,"sources":["docs/js/app.js"],"names":["app","angular","module","controller","$scope","$interval","Hash","Calendar","GanttRow","serializeDate","date","pad","v","s","z","length","Array","join","yyyy","getFullYear","MM","getMonth","dd","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","getRandomDay","Date","setDate","Math","floor","random","setHours","setMinutes","setSeconds","key","ceil","getTime","mKey","getRandomItem","day","item","id","uid","hours","activityId","row","taskId","log","prototype","slice","call","arguments","activity","name","budgetHours","project","type","deliveryDate","addItem","slots","add","update","updateMonths","updateItem","extend","clearItems","ranges","removeAll","months","days","intervalId","start","stop","cancel","constant","ACTIVITY","CUSTOMER","DEPARTMENT","GROUP","MANAGER","PROJECT","RESOURCE","USER","factory","pool","get","Object","defineProperties","this","value","enumerable","writable","has","undefined","getId","hash","set","push","newItem","p","i","keys","remove","oldItem","index","indexOf","splice","addMany","items","removeMany","shift","each","callback","forward","reverse","sort","c","d","a","b","backward","differs","t","updatePool","forEach","pools","ArrayFrom","len","today","todayKey","clearMonth","month","tasks","fromDay","getDay","monthDays","weeks","r","$today","getKey","ganttGroups","data","colors","assignedHours","useBudget","customer","department","manager","resource","color","lastTaskId","canSelect","canEdit","toLowerCase","mergeSlot","slot","insertSlot","min","max","removeSlots","toggleSlots","assign","col","console","$key","$date","write","erase","toggle","total","copy","task","updateRanges","previous","lastDay","rKey","range","getRange","from","to","firstKey","lastKey","updateRange","previousKey","nextKey","n","canMoveRange","dir","can","first","getOffsetKey","startDate","k","moveRange","addDays","toggleOpened","opened","compress","Utils","where","serialNumber","number","toString"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\r\n\r\n\"use strict\";\r\n\r\nvar app = angular.module('app', ['ngRoute', 'jsonFormatter']);\n/* global angular, app */\r\n\n/* global angular, app */\r\n\r\napp.controller('DemoCtrl', ['$scope', '$interval', 'Hash', 'Calendar', 'GanttRow', function($scope, $interval, Hash, Calendar, GanttRow) {\r\n\r\n    var row = $scope.row = new GanttRow({\r\n        activity: {\r\n            id: 1000000 + getRandom(),\r\n            name: 'Activity',\r\n            budgetHours: 10 + Math.floor(Math.random() * 50),\r\n        },\r\n        project: {\r\n            type: Math.floor(Math.random() * 5),\r\n            deliveryDate: new Date(),\r\n        },\r\n    }, []);\r\n\r\n    $scope.addItem = function() {\r\n        var item = getRandomItem();\r\n        row.slots.add(item);\r\n        row.update();\r\n        row.updateMonths();\r\n        $scope.item = item;\r\n        // console.log('addItem', item.id);\r\n        log('addItem', item.id);\r\n    };\r\n    $scope.updateItem = function() {\r\n        if ($scope.item) {\r\n            var id = $scope.item.id;\r\n            item = getRandomItem();\r\n            item = angular.extend($scope.item, item);\r\n            item.id = id;\r\n            row.slots.add(item);\r\n            row.update();\r\n            row.updateMonths();\r\n            $scope.item = item;\r\n            log('updateItem', item.id);\r\n        }\r\n    };\r\n    $scope.clearItems = function() {\r\n        row.ranges.removeAll();\r\n        row.months.removeAll();\r\n        row.days.removeAll();\r\n        row.slots.removeAll();\r\n        row.update();\r\n        row.updateMonths();\r\n        delete $scope.item;\r\n        log('clearItems');\r\n    };\r\n\r\n    var intervalId;\r\n    $scope.start = function() {\r\n        $scope.stop();\r\n        intervalId = $interval($scope.addItem, 1000 / 60);\r\n    };\r\n    $scope.stop = function() {\r\n        if (intervalId) {\r\n            $interval.cancel(intervalId);\r\n        }\r\n    };\r\n\r\n    function serializeDate(date) {\r\n        function pad(v, s, z) {\r\n            v = (v || 0) + '';\r\n            s = (s || 2);\r\n            z = (z || '0');\r\n            return v.length >= s ? v : new Array(s - v.length + 1).join(z) + v;\r\n        }\r\n        var yyyy = date.getFullYear();\r\n        var MM = date.getMonth() + 1; // getMonth() is zero-based\r\n        var dd = date.getDate();\r\n        var hh = date.getHours();\r\n        var mm = date.getMinutes();\r\n        var ss = date.getSeconds();\r\n        return yyyy + '-' + pad(MM) + '-' + pad(dd) + 'T' + pad(hh) + ':' + pad(mm) + ':' + pad(ss);\r\n    }\r\n\r\n    function getRandom() {\r\n        return 1000000 + Math.floor(Math.random() * 100000);\r\n    }\r\n\r\n    function getRandomDay() {\r\n        const oneday = (24 * 60 * 60 * 1000);\r\n        var date = new Date();\r\n        date.setDate(date.getDate() + Math.floor(Math.random() * 60));\r\n        // date.setMonth(date.getMonth() + Math.floor(Math.random() * 2));\r\n        date.setHours(0);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n        var yyyy = date.getFullYear();\r\n        var MM = date.getMonth();\r\n        var key = Math.ceil(date.getTime() / oneday);\r\n        var mKey = yyyy * 12 + MM;\r\n        return {\r\n            key: key,\r\n            mKey: mKey,\r\n            date: serializeDate(date)\r\n        };\r\n    }\r\n\r\n    var uid = 1;\r\n\r\n    function getRandomItem() {\r\n        var day = getRandomDay();\r\n        var item = {\r\n            id: uid,\r\n            hours: 1 + Math.floor(Math.random() * 6),\r\n            date: new Date(day.date),\r\n            key: day.key,\r\n            mKey: day.mKey,\r\n            activityId: row.id,\r\n        };\r\n        if (Math.floor(Math.random() * 3) == 0) {\r\n            item.taskId = 10000 + Math.floor(Math.random() * 50);\r\n        }\r\n        uid++;\r\n        return item;\r\n    }\r\n\r\n    function log() {\r\n        $scope.log = Array.prototype.slice.call(arguments);\r\n    }\r\n}]);\r\n\r\n\r\napp.constant('ganttGroups', {\r\n    ACTIVITY: 1,\r\n    CUSTOMER: 2,\r\n    DEPARTMENT: 3,\r\n    GROUP: 4,\r\n    MANAGER: 5,\r\n    PROJECT: 6,\r\n    RESOURCE: 7,\r\n    USER: 9,\r\n});\r\n\r\napp.factory('Hash', [function() {\r\n    var pools = {};\r\n\r\n    function Hash(key, pool) {\r\n        key = key || 'id';\r\n        pool = pool ? Hash.get(pool) : {};\r\n        Object.defineProperties(this, {\r\n            key: {\r\n                value: key,\r\n                enumerable: false,\r\n                writable: false\r\n            },\r\n            pool: {\r\n                value: pool,\r\n                enumerable: false,\r\n                writable: false\r\n            },\r\n            length: {\r\n                value: 0,\r\n                enumerable: false,\r\n                writable: true\r\n            }\r\n        });\r\n    }\r\n\r\n    function has(id) {\r\n        return this.pool[id] !== undefined;\r\n    }\r\n\r\n    function getId(id) {\r\n        return this.pool[id];\r\n    }\r\n\r\n    function get(item) {\r\n        var hash = this,\r\n            key = this.key;\r\n        return item ? hash.getId(item[key]) : null;\r\n    }\r\n\r\n    function set(item) {\r\n        var hash = this,\r\n            pool = this.pool,\r\n            key = this.key;\r\n        pool[item[key]] = item;\r\n        hash.push(item);\r\n        return item;\r\n    }\r\n\r\n    function add(newItem) {\r\n        var hash = this;\r\n        var item = hash.get(newItem);\r\n        if (item) {\r\n            for (var i = 0, keys = Object.keys(newItem), p; i < keys.length; i++) {\r\n                p = keys[i];\r\n                item[p] = newItem[p];\r\n            }\r\n        } else {\r\n            item = hash.set(newItem);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    function remove(oldItem) {\r\n        var hash = this,\r\n            pool = this.pool,\r\n            key = this.key;\r\n        var item = hash.get(oldItem);\r\n        if (item) {\r\n            var index = hash.indexOf(item);\r\n            if (index !== -1) {\r\n                hash.splice(index, 1);\r\n            }\r\n            delete pool[item[key]];\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    function addMany(items) {\r\n        var hash = this;\r\n        if (!items) {\r\n            return hash;\r\n        }\r\n        var i = 0;\r\n        while (i < items.length) {\r\n            hash.add(items[i]);\r\n            i++;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    function removeMany(items) {\r\n        var hash = this;\r\n        if (!items) {\r\n            return hash;\r\n        }\r\n        var i = 0;\r\n        while (i < items.length) {\r\n            hash.remove(items[i]);\r\n            i++;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    function removeAll() {\r\n        var hash = this,\r\n            key = hash.key,\r\n            pool = hash.pool;\r\n        var i = 0,\r\n            t = hash.length,\r\n            item;\r\n        while (hash.length) {\r\n            item = hash.shift();\r\n            delete pool[item[key]];\r\n            i++;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    function each(callback) {\r\n        var hash = this;\r\n        if (callback) {\r\n            var i = 0;\r\n            while (i < hash.length) {\r\n                callback(hash[i], i);\r\n                i++;\r\n            }\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    function forward(key, reverse) {\r\n        var hash = this,\r\n            key = (key || this.key);\r\n        hash.sort(function(c, d) {\r\n            var a = reverse ? d : c;\r\n            var b = reverse ? c : d;\r\n            return a[key] - b[key];\r\n        });\r\n        return hash;\r\n    }\r\n\r\n    function backward(key) {\r\n        return this.forward(key, true);\r\n    }\r\n\r\n    function differs(hash) {\r\n        if (hash.key !== this.key || hash.length !== this.length) {\r\n            return true;\r\n        } else {\r\n            var differs = false,\r\n                i = 0,\r\n                t = this.length,\r\n                key = this.key;\r\n            while (differs && i < t) {\r\n                differs = this[i][key] !== hash[i][key];\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function updatePool() {\r\n        var hash = this,\r\n            pool = this.pool,\r\n            key = this.key;\r\n        Object.keys(pool).forEach(function(key) {\r\n            delete pool[key];\r\n        });\r\n        angular.forEach(hash, function(item) {\r\n            pool[item[key]] = item;\r\n        });\r\n    }\r\n    Hash.get = function(pool) {\r\n        return pools[pool] = (pools[pool] || {});\r\n    };\r\n    Hash.prototype = new Array;\r\n    Hash.prototype.has = has;\r\n    Hash.prototype.getId = getId;\r\n    Hash.prototype.get = get;\r\n    Hash.prototype.set = set;\r\n    Hash.prototype.add = add;\r\n    Hash.prototype.remove = remove;\r\n    Hash.prototype.each = each;\r\n    Hash.prototype.addMany = addMany;\r\n    Hash.prototype.removeMany = removeMany;\r\n    Hash.prototype.removeAll = removeAll;\r\n    Hash.prototype.forward = forward;\r\n    Hash.prototype.backward = backward;\r\n    Hash.prototype.differs = differs;\r\n    Hash.prototype.updatePool = updatePool;\r\n    return Hash;\r\n}]);\r\n\r\napp.factory('Calendar', ['Hash', function(Hash) {\r\n    const oneday = (24 * 60 * 60 * 1000);\r\n    var today = new Date();\r\n    today.setHours(0);\r\n    today.setMinutes(0);\r\n    today.setSeconds(0);\r\n    var todayKey = Math.ceil(today.getTime() / oneday);\r\n\r\n    function ArrayFrom(len, callback) {\r\n        var a = [];\r\n        while (a.length < len) {\r\n            a.push(callback(a.length));\r\n        }\r\n        return a;\r\n    };\r\n    var months = new Hash('mKey');\r\n\r\n    function Calendar() {}\r\n    Calendar.getDate = function(day) {\r\n        if (typeof day.date.getMonth === 'function') {\r\n            return day.date;\r\n        } else {\r\n            return new Date(day.date);\r\n        }\r\n    };\r\n    Calendar.clearMonth = function(month) {\r\n        month.days.each(function(day) {\r\n            if (day) {\r\n                day.hours = 0;\r\n                day.tasks = [];\r\n            }\r\n        });\r\n    };\r\n    Calendar.getMonth = function(day) {\r\n        today = new Date();\r\n        today.setHours(0);\r\n        today.setMinutes(0);\r\n        today.setSeconds(0);\r\n        todayKey = Math.ceil(today.getTime() / oneday);\r\n        //\r\n        var date = Calendar.getDate(day);\r\n        var yyyy = date.getFullYear();\r\n        var MM = date.getMonth();\r\n        var key = Math.ceil(date.getTime() / oneday);\r\n        var mKey = yyyy * 12 + MM;\r\n        var month = months.getId(mKey);\r\n        if (!month) {\r\n            var fromDay = new Date(yyyy, MM, 1).getDay();\r\n            var monthDays = new Date(yyyy, MM + 1, 0).getDate();\r\n            var weeks = Math.ceil(monthDays / 7);\r\n            var month = {\r\n                date: date,\r\n                mKey: mKey,\r\n                month: MM,\r\n                monthDays: monthDays,\r\n                fromDay: fromDay,\r\n                days: new Hash('key'),\r\n            };\r\n            month.weeks = ArrayFrom(weeks, function(r) {\r\n                var days = ArrayFrom(7, function(c) {\r\n                    var item = null;\r\n                    var d = r * 7 + c - (fromDay - 1);\r\n                    if (d >= 0 && d < monthDays) {\r\n                        var date = new Date(yyyy, MM, d + 1);\r\n                        var key = Math.ceil(date.getTime() / oneday);\r\n                        item = {\r\n                            $today: key === todayKey,\r\n                            c: c,\r\n                            r: r,\r\n                            d: d + 1,\r\n                            date: date,\r\n                            key: key,\r\n                            hours: 0,\r\n                            tasks: [],\r\n                        };\r\n                        item = month.days.add(item);\r\n                    }\r\n                    return item;\r\n                });\r\n                return {\r\n                    r: r,\r\n                    days: days,\r\n                }\r\n            });\r\n            month = months.add(month);\r\n        }\r\n        return month;\r\n    };\r\n    Calendar.getDay = function(days) {\r\n        var date = new Date(today);\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    };\r\n    Calendar.getKey = function(date) {\r\n        return Math.ceil(date.getTime() / oneday);\r\n    };\r\n    return Calendar;\r\n}]);\r\n\r\napp.factory('GanttRow', ['Hash', 'Calendar', 'ganttGroups', function(Hash, Calendar, ganttGroups) {\r\n    var uid = 1;\r\n\r\n    const oneday = (24 * 60 * 60 * 1000);\r\n    var today = new Date();\r\n    today.setHours(0);\r\n    today.setMinutes(0);\r\n    today.setSeconds(0);\r\n    var todayKey = Math.ceil(today.getTime() / oneday);\r\n\r\n    function GanttRow(data, colors) {\r\n        this.type = ganttGroups.ACTIVITY;\r\n        this.assignedHours = 0;\r\n        this.slots = new Hash('id');\r\n        this.days = new Hash('key');\r\n        this.months = new Hash('mKey');\r\n        this.ranges = new Hash('rKey');\r\n        this.tasks = new Hash('id'); // 'taskId'\r\n        // angular.isObject(data) ? angular.extend(this, data) : null;\r\n        if (data) {\r\n            this.id = data.activity.id;\r\n            this.name = data.activity.name;\r\n            this.budgetHours = data.activity.budgetHours;\r\n            this.useBudget = data.project.type !== 2 && data.project.type !== 4;\r\n            this.customer = data.customer;\r\n            this.department = data.department;\r\n            this.manager = data.manager;\r\n            this.project = data.project;\r\n            this.resource = data.resource;\r\n            this.color = colors[this.id % (colors.length || 1)];\r\n        }\r\n        // this.items = new Hash().fill(data.items);\r\n        this.lastTaskId = null;\r\n        this.update();\r\n    }\r\n    GanttRow.prototype = {\r\n        canSelect: function() {\r\n            return this.type === ganttGroups.ACTIVITY && this.budgetHours > 0;\r\n        },\r\n        canEdit: function() {\r\n            return this.canSelect() && this.resource.name.toLowerCase().indexOf('nondefinito') === -1;\r\n        },\r\n        mergeSlot: function(slot) {\r\n            var slots = this.slots;\r\n            slot.hours ? slots.add(slot) : slots.remove(slot);\r\n        },\r\n        insertSlot: function(key, hours, taskId) {\r\n            var slot = null;\r\n            this.useBudget ? hours = Math.min(hours, this.budgetHours - this.assignedHours) : null;\r\n            hours = Math.max(0, hours);\r\n            if (hours > 0) {\r\n                var item = {\r\n                    id: 'temp-' + (uid++),\r\n                    key: key,\r\n                    date: new Date(key * oneday),\r\n                    hours: hours,\r\n                    activityId: this.id,\r\n                };\r\n                if (taskId) {\r\n                    item.taskId = taskId;\r\n                    this.lastTaskId = taskId;\r\n                }\r\n                this.slots.add(item);\r\n                slot = this.slots.getId(item.id);\r\n            }\r\n            this.update();\r\n            return slot;\r\n        },\r\n        removeSlots: function(key) {\r\n            var day = this.days.getId(key);\r\n            day.tasks.each(function(item) {\r\n                item.hours = 0;\r\n            });\r\n            var slots = day.tasks.slice();\r\n            this.slots.removeMany(slots);\r\n            this.update();\r\n            return slots;\r\n        },\r\n        toggleSlots: function(key, hours) {\r\n            if (this.days.has(key)) {\r\n                return this.removeSlots(key);\r\n            } else {\r\n                var slot = this.insertSlot(key, hours, this.lastTaskId);\r\n                return [slot];\r\n            }\r\n        },\r\n        // WRITE CANCEL DAY SLOT\r\n        assign: function(col, value) {\r\n            console.log('assign');\r\n            var slots = this.slots,\r\n                key = col.$key;\r\n            var item = {\r\n                // errore\r\n                id: 'temp-' + (uid++),\r\n                key: key,\r\n                date: col.$date,\r\n                hours: value || 0,\r\n                activityId: this.id,\r\n            };\r\n            value ? slots.add(item) : slots.remove(item);\r\n            this.update();\r\n            return this.days.getId(key);\r\n        },\r\n        write: function(col, value, max) {\r\n            value = Math.min(value, max);\r\n            this.useBudget ? value = Math.min(value, this.budgetHours - this.assignedHours) : null;\r\n            value = Math.max(0, value);\r\n            if (value && !this.days.has(col.$key) && col.$date >= today) {\r\n                return this.assign(col, value);\r\n            }\r\n        },\r\n        erase: function(col, value, max) {\r\n            if (this.days.has(col.$key) && col.$date >= today) {\r\n                return this.assign(col, null);\r\n            }\r\n        },\r\n        toggle: function(col, value, max) {\r\n            if (this.days.has(col.$key)) {\r\n                return this.erase(col, value, max);\r\n            } else {\r\n                return this.write(col, value, max);\r\n            }\r\n        },\r\n        // WRITE CANCEL DAY SLOT\r\n        update: function() {\r\n            var total = 0;\r\n            var slots = this.slots,\r\n                days = this.days;\r\n            days.removeAll();\r\n            var taskId = null;\r\n            slots.each(function(item) {\r\n                taskId = item.taskId || taskId;\r\n                total += item ? item.hours : 0;\r\n                var day = days.add({\r\n                    key: item.key,\r\n                    date: item.date,\r\n                    hours: 0,\r\n                });\r\n                day.tasks = day.tasks || new Hash('id'); // 'taskId'\r\n                day.tasks.add(angular.copy(item));\r\n                day.tasks.each(function(task) {\r\n                    day.hours += task.hours;\r\n                });\r\n            });\r\n            this.lastTaskId = taskId || this.lastTaskId;\r\n            days.forward(); // sort by key       \r\n            this.assignedHours = total;\r\n            this.updateRanges();\r\n        },\r\n        updateMonths: function() {\r\n            var days = this.days,\r\n                months = this.months;\r\n            months.removeAll();\r\n            var previous;\r\n            days.each(function(item) {\r\n                var month = Calendar.getMonth(item);\r\n                if (month !== previous) {\r\n                    previous = month;\r\n                    Calendar.clearMonth(month);\r\n                }\r\n                months.add(month);\r\n                var day = month.days.getId(item.key);\r\n                if (day) {\r\n                    day.hours = item.hours;\r\n                    day.tasks = item.tasks;\r\n                }\r\n            });\r\n            months.forward(); // sort by key  \r\n        },\r\n        updateRanges: function() {\r\n            var days = this.days,\r\n                ranges = this.ranges;\r\n            ranges.removeAll();\r\n            var rKey = 0,\r\n                lastDay;\r\n            days.each(function(day, i) {\r\n                if (lastDay) {\r\n                    if (day.key - lastDay.key > 1 || day.tasks.differs(lastDay.tasks)) {\r\n                        rKey++;\r\n                    }\r\n                }\r\n                lastDay = day;\r\n                var range = ranges.add({\r\n                    rKey: rKey,\r\n                });\r\n                range.days = range.days || [];\r\n                range.days.push(day.key);\r\n            });\r\n            ranges.forward(); // sort by key   \r\n        },\r\n        getRange: function(col, from, to) {\r\n            var ranges = this.ranges,\r\n                range = null,\r\n                key = col.$key;\r\n            ranges.each(function(item) {\r\n                var index = item.days.indexOf(key);\r\n                if (index !== -1) {\r\n                    item.c = index;\r\n                    item.firstKey = Math.max(from, item.days[0]);\r\n                    item.lastKey = Math.min(to, item.days[item.days.length - 1]);\r\n                    range = item;\r\n                }\r\n            });\r\n            return range;\r\n        },\r\n        updateRange: function(col, from, to) {\r\n            var ranges = this.ranges,\r\n                range = this.getRange(col, from, to);\r\n            if (range) {\r\n                range.previousKey = null;\r\n                range.nextKey = null;\r\n                var r = range.rKey;\r\n                if (r > 0) {\r\n                    var p = ranges[r - 1];\r\n                    range.previousKey = p.days[p.days.length - 1];\r\n                }\r\n                if (r < ranges.length - 1) {\r\n                    var n = ranges[r + 1];\r\n                    range.nextKey = n.days[0];\r\n                }\r\n            }\r\n            return range;\r\n        },\r\n        canMoveRange: function(range, dir) {\r\n            // rifare !!!\r\n            var can = true;\r\n            var row = this;\r\n            var first = range.items[0];\r\n            var last = range.items[range.items.length - 1];\r\n            var key = row.getOffsetKey(first.startDate, dir);\r\n            var i = 0,\r\n                t = range.items.length;\r\n            while (i < t) {\r\n                var k = key + i;\r\n                if (k < todayKey || (row.days.getId(k) && range.items.indexOf(row.days.getId(k)) === -1)) { // sistemare!!\r\n                    can = false;\r\n                    i = t;\r\n                }\r\n                i++;\r\n            }\r\n            return can;\r\n        },\r\n        moveRange: function(range, dir) {\r\n            if (range.items.length) {\r\n                var row = this;\r\n                if (row.canMoveRange(range, dir)) {\r\n                    angular.forEach(range.items, function(item) {\r\n                        row.addDays(item, dir);\r\n                    });\r\n                    row.update();\r\n                }\r\n            }\r\n        },\r\n        addDays: function(item, days) {\r\n            // console.log('GanttRow.addDay', item, days);\r\n            var date = new Date(item.startDate);\r\n            date.setDate(date.getDate() + days);\r\n            item.date = date;\r\n            item.key = Math.ceil(date.getTime() / oneday);\r\n            return item;\r\n        },\r\n        getOffsetKey: function(date, day) {\r\n            var date = new Date(date);\r\n            date.setDate(date.getDate() + day);\r\n            var key = Math.ceil(date.getTime() / oneday);\r\n            return key;\r\n        },\r\n        getHours: function(key) {\r\n            var hours = 0;\r\n            var day = this.days.getId(key);\r\n            if (day) {\r\n                day.tasks.each(function(task) {\r\n                    hours += task.hours;\r\n                });\r\n            }\r\n            return hours;\r\n        },\r\n        toggleOpened: function() {\r\n            // console.log('toggleOpened');\r\n            this.opened = !this.opened;\r\n        },\r\n        compress: function(key) {\r\n            if (!this.items.length) {\r\n                return;\r\n            }\r\n            this.items.sort(function(a, b) {\r\n                return a.key - b.key;\r\n            });\r\n            var item = Utils.where(this.items, { key: key });\r\n            item = item || this.items[0];\r\n            var index = this.items.indexOf(item);\r\n            var i = index,\r\n                t = this.items.length;\r\n            key = Math.max(key, todayKey);\r\n            // da rifare\r\n            // collezionare ore totali\r\n            // redistribuire records in base a carico giornaliero\r\n            // spostare su gantt\r\n            while (i < t) {\r\n                var item = this.items[i];\r\n                item.key = key + i - index;\r\n                item.date = new Date(item.key * oneday);\r\n                i++;\r\n            }\r\n            this.update();\r\n        },\r\n    }\r\n    GanttRow.serialNumber = function(number, max) {\r\n        return new Array((1 + (max.toString().length) - (number.toString().length))).join('0');\r\n    };\r\n    return GanttRow;\r\n}]);\n/* global angular, app */\r\n\n/* global angular, app, Autolinker */\r\n\n/* global angular, app */\r\n\n/* global angular, app */"]}